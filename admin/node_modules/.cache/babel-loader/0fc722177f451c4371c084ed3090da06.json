{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = importScripts;\n\nvar _path = require('path');\n\nvar _vm = require('vm');\n\nvar _fs = require('fs');\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar NetworkError = function (_Error) {\n  _inherits(NetworkError, _Error);\n\n  function NetworkError() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, NetworkError);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = NetworkError.__proto__ || Object.getPrototypeOf(NetworkError)).call.apply(_ref, [this].concat(args))), _this), _this.name = 'NetworkError', _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  return NetworkError;\n}(Error);\n\nfunction importScripts() {\n  for (var _len2 = arguments.length, scripts = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    scripts[_key2] = arguments[_key2];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = scripts[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var script = _step.value;\n      var filepath = void 0,\n          code = void 0;\n\n      try {\n        filepath = (0, _path.resolve)(script);\n      } catch (error) {\n        throw new SyntaxError(error.message);\n      }\n\n      try {\n        code = (0, _fs.readFileSync)(filepath, 'utf-8');\n      } catch (error) {\n        throw new NetworkError(error.message);\n      }\n\n      (0, _vm.runInThisContext)(code, {\n        filename: filepath\n      });\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n}","map":{"version":3,"sources":["../src/index.js"],"names":["NetworkError","Error","name","importScripts","scripts","script","filepath","code","error","filename"],"mappings":";;;;;kBAQwBG,a;;AARxB,IAAA,KAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AACA,IAAA,GAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;AACA,IAAA,GAAA,GAAA,OAAA,CAAA,IAAA,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IAEMH,Y;;;;;;;;;;;;;;kMACJE,I,GAAO,c;;;;EADkBD,K;;AAIZ,SAAA,aAAA,GAAoC;AAAA,OAAA,IAAA,KAAA,GAAA,SAAA,CAAA,MAAA,EAATG,OAAS,GAAA,KAAA,CAAA,KAAA,CAAA,EAAA,KAAA,GAAA,CAAA,EAAA,KAAA,GAAA,KAAA,EAAA,KAAA,EAAA,EAAA;AAATA,IAAAA,OAAS,CAAA,KAAA,CAATA,GAAS,SAAA,CAAA,KAAA,CAATA;AAAS;;AAAA,MAAA,yBAAA,GAAA,IAAA;AAAA,MAAA,iBAAA,GAAA,KAAA;AAAA,MAAA,cAAA,GAAA,SAAA;;AAAA,MAAA;AACjD,SAAA,IAAA,SAAA,GAAqBA,OAArB,CAAA,MAAA,CAAA,QAAA,CAAqBA,EAArB,EAAA,KAAA,EAAA,EAAA,yBAAA,GAAA,CAAA,KAAA,GAAA,SAAA,CAAA,IAAA,EAAA,EAAA,IAAA,CAAA,EAAA,yBAAA,GAAA,IAAA,EAA8B;AAAA,UAAnBC,MAAmB,GAAA,KAAA,CAAA,KAAA;AAC5B,UAAIC,QAAAA,GAAAA,KAAJ,CAAA;AAAA,UAAcC,IAAAA,GAAAA,KAAd,CAAA;;AAEA,UAAI;AACFD,QAAAA,QAAAA,GAAW,CAAA,GAAA,KAAA,CAAA,OAAA,EAAXA,MAAW,CAAXA;AADF,OAAA,CAEE,OAAA,KAAA,EAAc;AACd,cAAM,IAAA,WAAA,CAAgBE,KAAAA,CAAtB,OAAM,CAAN;AACD;;AAED,UAAI;AACFD,QAAAA,IAAAA,GAAO,CAAA,GAAA,GAAA,CAAA,YAAA,EAAA,QAAA,EAAPA,OAAO,CAAPA;AADF,OAAA,CAEE,OAAA,KAAA,EAAc;AACd,cAAM,IAAA,YAAA,CAAiBC,KAAAA,CAAvB,OAAM,CAAN;AACD;;AAED,OAAA,GAAA,GAAA,CAAA,gBAAA,EAAA,IAAA,EAAuB;AAACC,QAAAA,QAAAA,EAAxB;AAAuB,OAAvB;AACD;AAjBgD,GAAA,CAAA,OAAA,GAAA,EAAA;AAAA,IAAA,iBAAA,GAAA,IAAA;AAAA,IAAA,cAAA,GAAA,GAAA;AAAA,GAAA,SAAA;AAAA,QAAA;AAAA,UAAA,CAAA,yBAAA,IAAA,SAAA,CAAA,MAAA,EAAA;AAAA,QAAA,SAAA,CAAA,MAAA;AAAA;AAAA,KAAA,SAAA;AAAA,UAAA,iBAAA,EAAA;AAAA,cAAA,cAAA;AAAA;AAAA;AAAA;AAkBlD","sourcesContent":["import {resolve} from 'path'\nimport {runInThisContext} from 'vm'\nimport {readFileSync} from 'fs'\n\nclass NetworkError extends Error {\n  name = 'NetworkError'\n}\n\nexport default function importScripts (...scripts) {\n  for (const script of scripts) {\n    let filepath, code\n\n    try {\n      filepath = resolve(script)\n    } catch (error) {\n      throw new SyntaxError(error.message)\n    }\n\n    try {\n      code = readFileSync(filepath, 'utf-8')\n    } catch (error) {\n      throw new NetworkError(error.message)\n    }\n\n    runInThisContext(code, {filename: filepath})\n  }\n}\n"]},"metadata":{},"sourceType":"script"}